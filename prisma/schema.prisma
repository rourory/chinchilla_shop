generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())

  fullName String
  email    String    @unique
  password String
  phone    String
  verified DateTime?

  provider   String?
  providerId String?

  cart Cart?

  verificationCode VerificationCode?
  ordero           Order[]

  role Role @default(USER)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id Int @id @default(autoincrement())

  categoryName String @unique

  products Product[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id Int @id @default(autoincrement())

  productName String

  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int

  extraOptions     ExtraOption[]
  productVariation ProductVariation[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ProductVariation {
  id Int @id @default(autoincrement())

  price Int

  variationName        String?
  variationDescription String?

  imageUrl String

  diasabled Boolean @default(false)

  product   Product @relation(fields: [productId], references: [id])
  productId Int

  cartItems CartItem[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ExtraOption {
  id Int @id @default(autoincrement())

  optionName String @unique
  price      Int    @default(0)
  imageUrl   String

  products  Product[]
  cartItems CartItem[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Cart {
  id Int @id @default(autoincrement())

  cartItem CartItem[]

  user   User? @relation(fields: [userId], references: [id])
  userId Int?  @unique

  token String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CartItem {
  id Int @id @default(autoincrement())

  productItem   ProductVariation @relation(fields: [productItemId], references: [id])
  productItemId Int

  extraOptions ExtraOption[]

  cart   Cart @relation(fields: [cartId], references: [id])
  cartId Int

  quantity Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id Int @id @default(autoincrement())

  user   User? @relation(fields: [userId], references: [id])
  userId Int?

  token       String
  totalAmount Int
  status      OrderStatus

  paymentId String?

  items Json

  fullName String
  address  String
  phone    String
  email    String
  comment  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VerificationCode {
  id Int @id @default(autoincrement())

  user   User? @relation(fields: [userId], references: [id])
  userId Int   @unique

  code String

  createdAt DateTime @default(now())

  @@unique([code, userId])
}

enum OrderStatus {
  PENDING
  SUCCEEDED
  CANCELLED
}

enum Role {
  USER
  ADMIN
}
